node {
    withEnv(["PATH+MAVEN=${tool 'Maven 3'}/bin"]) {
        stage('Build unbescape-1.1.6-donotuse') {
            git url: 'https://github.com/comsysto/jenkins-lab-shared-pipeline.git',
                branch: 'feature/parallel-builds',
                credentialsId: 'Github'

            dir('parallel-builds/unbescape') {
                sh 'mvn -B clean install -Dgpg.skip=true'
            }
        }
    }
}

List<StageDef> stageDefs = [
        new StageDef("2.8.9"),
        new StageDef("2.6.3"),
        new StageDef("2.6.2"),
        new StageDef("2.0.0")]

def branches = [:]

for (module in stageDefs) {

    String jacksonVersion = module.jacksonVersion
    String branchName = "Build ThymeLeaf with Jackson " + jacksonVersion
    String outFileName = "thymeleaf-with-jackson-${jacksonVersion}.dependencies"

    branches[branchName] = {
        node('!master') {
            withEnv(["PATH+MAVEN=${tool 'Maven 3'}/bin"]) {

                stage(branchName) {
                    git url: 'https://github.com/thymeleaf/thymeleaf.git',
                        branch: '3.0-master'
                    sh "mvn -B clean install -Djackson.version=${jacksonVersion} -Dunbescape.version=1.1.6-donotuse -Dgpg.skip=true"
//                    sh "mvn -B dependency:tree | tee target/${outFileName} ; test \${PIPESTATUS[0]} -eq 0"
//                    stash name: outFileName, includes: "target/${outFileName}"
                }
            }
        }
    }
}

parallel branches

node {
    cleanWs
}

class StageDef implements Serializable {

    String jacksonVersion

    StageDef(final String jacksonVersion) {
        this.jacksonVersion = jacksonVersion
    }
}

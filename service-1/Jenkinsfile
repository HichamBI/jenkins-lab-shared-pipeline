node {
	try {
		stage('Checkout') {
			echo 'Checkout'
			checkout scm
			sh 'git clean -dfx'
		}

		dir('service-1') {	
			stage('Build') {
				env.PATH = "${tool 'gradle'}/bin:${env.PATH}"
				sh 'gradle build'
			}
			
			stage('Deploy') {
				sh 'ssh matthias@192.168.99.101 ./jenkinslab/service-1/shutdown.sh || true'
				sh 'scp build/libs/service-1-0.0.1-SNAPSHOT.jar startup.sh shutdown.sh matthias@192.168.99.101:~/jenkinslab/service-1/'
				sh 'ssh matthias@192.168.99.101 chmod -R 755 jenkinslab/service-1'
				sh 'ssh matthias@192.168.99.101 ./jenkinslab/service-1/startup.sh &'
			}
			
			stage('Healthcheck') {
				retry(5) {
					sleep time: 10, units: 'SECONDS'
					def response = httpRequest 'http://192.168.99.101:9090/health'
					if (!response.content.contains("status":"UP")) {
						error('alive check failed: $(response.content)')
					}
				}
			}
		}
	}
	catch (exc) {
		echo "Caught: ${exc}"
		currentBuild.result = 'FAILURE'
	}
}